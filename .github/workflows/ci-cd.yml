name: CI/CD Pipeline

on:
  push:
    branches:
      - e1  # Surveiller la branche 'e1'
  pull_request:
    branches:
      - e1
  schedule:
    - cron: '0 0 * * *'  # Planifier le pipeline tous les jours à minuit
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Version Python 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r portail_sante/auth_app/requirements.txt  # Installer les dépendances

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r portail_sante/auth_app/requirements.txt  # Installer les dépendances

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/portail_sante/auth_app
          python portail_sante/manage.py test  # Exécuter les tests

  # Étape d'entraînement du modèle avec MLflow
  mlflow_training:
    runs-on: ubuntu-latest
    needs: test  # Cette étape ne se déclenche que si les tests sont réussis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r portail_sante/auth_app/requirements.txt
          pip install mlflow  # Installation de MLflow si ce n'est pas déjà dans le fichier requirements.txt

      - name: Run training with MLflow
        run: |
          export MLFLOW_TRACKING_URI=http://127.0.0.1:5000/  # Configurer l'URI de tracking MLflow
          python portail_sante/ml_models/train_model.py  # Assurez-vous que ce fichier inclut l'entraînement MLflow
